{"mappings":";;;;;;AEAA,IAAO,sCAIN;UAJW,MAAK;IAAL,MAAK,CACf,2BAA2B,IAA3B,2BAA2B;IADjB,MAAK,CAEf,uBAAuB,IAAvB,uBAAuB;IAFb,MAAK,CAGf,kBAAkB,IAAlB,kBAAkB;GAHR,sCAAK,KAAL,sCAAK;;ADAjB;AAGO,MAAM,yCAAQ;IACnB,MAAM,GAID,EAAE,CAAC;IAER,QAAQ,GAAa,EAAE,CAAC;IAExB,AAAQ,QAAQ,CAAC,OAAe,EAAE,OAAgB,EAAE,OAAwB,EAAE;QAC5E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,OAAO,EAAE;mBAAI,IAAI,CAAC,QAAQ;gBAAE,OAAO;aAAC,CAAC,IAAI,CAAC,GAAG,CAAC;qBAC9C,OAAO;qBACP,OAAO;SACR,CAAC,CAAC;KACJ;IAED,MAAM,CAAC,MAAc,EAAE,OAAE,GAAG,CAAA,OAAE,GAAG,CAAA,EAAkB,EAAE;QACnD,MAAM,UAAE,MAAM,CAAA,EAAE,GAAG,GAAG,AAAC;QACvB,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,AAAC;QACzC,KAAK,MAAM,WAAE,OAAO,CAAA,WAAE,OAAO,CAAA,WAAE,OAAO,CAAA,EAAE,IAAI,IAAI,CAAC,MAAM,CAAE;YACvD,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;gBAAC,EAAE;gBAAE,MAAM;gBAAE,OAAO;aAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,AAAC;YACpE,IAAI,MAAM,IAAI,OAAO,CAAC,MAAM,CAAe,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;gBACpE,MAAM,GAAG,GAAG;yBAAE,GAAG;yBAAE,GAAG;iBAAE,AAAC;gBACzB,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;aACrB;SACF;QACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAAE,KAAK,EAAE,CAAA,GAAA,sCAAK,CAAA,CAAC,kBAAkB,CAAC;iBAAE,GAAG;SAAE,CAAC,CAAC;KACjE;IAED,KAAK,CAAC,OAAe,EAAE,OAAqB,EAAE,OAAwB,EAAE;QACtE,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAK;gBAAC,CAAC;gBAAE,IAAI;aAAC,CAAC,CAAC,AAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KACvC;IAED,KAAK,CAAC,OAAe,EAAE,EAAc,EAAE;QACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,EAAE,EAAE,CAAC;QACL,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KAC1B;IAED,KAAK,CAAC,OAAe,EAAE,OAAwB,EAAE;QAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE,EAAE,OAAO,CAAC,CAAC;KAClD;IAED,MAAM,CAAC,OAAe,EAAE,OAAwB,EAAE;QAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAAE,MAAM,EAAE,IAAI;SAAE,EAAE,OAAO,CAAC,CAAC;KACnD;IAED,GAAG,CAAC,OAAe,EAAE,OAAwB,EAAE;QAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAAE,GAAG,EAAE,IAAI;SAAE,EAAE,OAAO,CAAC,CAAC;KAChD;IAED,GAAG,CAAC,OAAe,EAAE,OAAwB,EAAE;QAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAAE,GAAG,EAAE,IAAI;SAAE,EAAE,OAAO,CAAC,CAAC;KAChD;IAED,IAAI,CAAC,OAAe,EAAE,OAAwB,EAAE;QAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAAE,IAAI,EAAE,IAAI;SAAE,EAAE,OAAO,CAAC,CAAC;KACjD;IAED,GAAG,CAAC,OAAe,EAAE,OAAwB,EAAE;QAC7C,IAAI,CAAC,QAAQ,CACX,OAAO,EACP;YACE,KAAK,EAAE,IAAI;YACX,GAAG,EAAE,IAAI;YACT,MAAM,EAAE,IAAI;YACZ,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI;SACX,EACD,OAAO,CACR,CAAC;KACH;CACF;;AD/ED;;","sources":["src/index.ts","src/NxRouter.ts","src/config.ts","src/types.ts"],"sourcesContent":["export * from \"./NxRouter\";\nexport * from \"./types\";\n","import { error } from './config';\nimport { HttpMethod, Methods, NextApiContext, NxRouteHandlder } from './types';\n\nexport class NxRouter {\n  routes: Array<{\n    pattern: string;\n    methods: Methods;\n    handler: NxRouteHandlder;\n  }> = [];\n\n  rootPath: string[] = [];\n\n  private addRoute(pattern: string, methods: Methods, handler: NxRouteHandlder) {\n    this.routes.push({\n      pattern: [...this.rootPath, pattern].join('/'),\n      handler,\n      methods,\n    });\n  }\n\n  handle(prefix: string, { req, res }: NextApiContext) {\n    const { method } = req;\n    const url = req.url?.split('?')[0] ?? '';\n    for (const { handler, pattern, methods } of this.routes) {\n      const regex = new RegExp(`^${['', prefix, pattern].join('/')}/\\?$`);\n      if (method && methods[method as HttpMethod] && regex.test(url ?? '')) {\n        const ctx = { req, res };\n        return handler(ctx);\n      }\n    }\n    res.status(400).json({ error: error['no-route-handler'], url });\n  }\n\n  route(pattern: string, methods: HttpMethod[], handler: NxRouteHandlder) {\n    const hash = Object.fromEntries(methods.map((v, i) => [v, true]));\n    this.addRoute(pattern, hash, handler);\n  }\n\n  group(pattern: string, cb: () => void) {\n    this.rootPath.push(pattern);\n    cb();\n    this.rootPath.splice(-1);\n  }\n\n  patch(pattern: string, handler: NxRouteHandlder) {\n    this.addRoute(pattern, { PATCH: true }, handler);\n  }\n\n  delete(pattern: string, handler: NxRouteHandlder) {\n    this.addRoute(pattern, { DELETE: true }, handler);\n  }\n\n  put(pattern: string, handler: NxRouteHandlder) {\n    this.addRoute(pattern, { PUT: true }, handler);\n  }\n\n  get(pattern: string, handler: NxRouteHandlder) {\n    this.addRoute(pattern, { GET: true }, handler);\n  }\n\n  post(pattern: string, handler: NxRouteHandlder) {\n    this.addRoute(pattern, { POST: true }, handler);\n  }\n\n  any(pattern: string, handler: NxRouteHandlder) {\n    this.addRoute(\n      pattern,\n      {\n        PATCH: true,\n        PUT: true,\n        DELETE: true,\n        GET: true,\n        POST: true,\n        OPTIONS: true,\n        HEAD: true,\n      },\n      handler,\n    );\n  }\n}\n","export enum error {\n  \"http-method-not-supported\" = \"http-method-not-supported\",\n  \"no-middlware-response\" = \"no-middlware-response\",\n  \"no-route-handler\" = \"no-route-handler\",\n}\n","import type { NextApiRequest, NextApiResponse } from 'next';\n\nexport type NextApiContext<T = unknown> = {\n  req: NextApiRequest;\n  res: NextApiResponse<T>;\n};\n\nexport type NxRouteHandlder = (ctx: NextApiContext) => void;\n\nexport type NxRouteMiddlware = (params?: NextApiContext) => NextApiContext | undefined;\n\nexport type HttpMethod = 'POST' | 'GET' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD' | 'OPTIONS';\n\nexport type Methods = Partial<{ [key in HttpMethod]: boolean }>;\n"],"names":[],"version":3,"file":"module.js.map"}